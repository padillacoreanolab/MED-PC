\ Copyright (C) 2015 MED Associates, All rights reserved.

\ Drug Self Infusion.mpc
\
\ When the program is started it will turn on the HouseLight, extend both
\ Levers, and turn on the light over the Correct Lever.  The program will then
\ wait for the Animal to respond on the Correct Lever enough times to meet the
\ Fixed Ratio Value.
\
\ When the Fixed Ratio Value has been met the program will turn on the Pump for
\ the Infusion Time.  At the end of the Infusion Time the program will turn off
\ the Pump and the light over the Correct Lever and time the Time Out Following
\ Infusion.
\
\ When the Time Out Following Infusion has been completed the program will once
\ again turn on the light over the Correct Lever and wait for the Animal to
\ respond on the Correct Lever enough times to meet the Fixed Ratio Value.
\
\ Responses on the Incorrect Lever will be recorded, but have no adverse affect.
\
\ The program will end when the Session Length or Maximum Number of Infusions
\ has been reached.  Whichever comes first.


\ Inputs
^LeftLever      = 1
^Left Position  = 2
^RightLever     = 3
^Right Position = 4

\ Outputs
^LeftLeverOut  = 1
^RightLeverOut = 2
^Pellet        = 3
^LeftLight     = 4
^RightLight    = 5
^WhiteNoise    = 6
^HouseLight    = 7
^Pump          = 8


\ A() = Control Variables with Assigned Aliases as Defined
Var_Alias Session Length (min)              = A(0)  \ Default = 30 minutes
Var_Alias Correct Lever (1=Left  2=Right)   = A(1)  \ Default = 2-Right
Var_Alias Maximum Number of Infusions       = A(2)  \ Default = 10
Var_Alias Fixed Ratio Value                 = A(3)  \ Default = 10
Var_Alias Infusion Time (sec)               = A(4)  \ Default = 2 seconds
Var_Alias Time out Following Infusion (sec) = A(5)  \ Default = 60 seconds
Var_Alias SoftCR Data Array (1=Yes  0=No)   = A(6)  \ Default = 1-Yes

^Session      = 0
^CorrectLev   = 1
^MaxRewards   = 2
^FRVal        = 3
^RewardTime   = 4
^TimeOut      = 5
^SoftCR       = 6
^RewardTicks  = 7
^TimeOutTicks = 8


\ List Data Variables Here
\  B() = Counters for Data Elements
\  B(0) = Right Lever Responses (@ Fixed Ratio)
\  B(1) = Right Lever Responses (@ Infusion)
\  B(2) = Right Lever Responses (@ Time out)
\  B(3) = Left  Lever Responses (@ Fixed Ratio)
\  B(4) = Left  Lever Responses (@ Infusion)
\  B(5) = Left  Lever Responses (@ Time out)
\  B(6) = Time in Fixed Ratio in Seconds
\  B(7) = Number of Infusions
\  B(8) = Correct Lever Responses/Minute (@ Fixed Ratio)
\           Left  Correct = {B(3) / (B(6) / 60)}
\           Right Correct = {B(0) / (B(6) / 60)}
\
\  C() = IRT Array and Event Pen Code for Soft Cum. Recorder
\
\  S = Elapsed Time in Session


\ List Working Variables Here
\  I = Subscript for the IRT Array C
\  T = Elapsed Time in 0.01 sec Increments for SoftCR Data


DIM A = 8
DIM B = 8
^CArraySize = 10000  \ Change this Variable also when modifying the C array size.
DIM C = 10000  \ Dimension Array C for 10001 data points.
               \ Under MED-PC Version IV, this array may be
               \ enlarged up to 1 million elements; however,
               \ 10,000 was felt to be adequate for this application.
               \ An end of array seal -987.987 will limit the saved
               \ file to only those elements used during the running
               \ of the procedure.


\ Z-Pulses Used in this Program
^Z_FR      = 1   \  Signal Start of Fixed Ratio
^Z_Reward  = 2   \  Signal Start of Infusion
^Z_TimeOut = 3   \  Signal Start of Time Out
^Z_End     = 32  \  Signal End of Session


DISKCOLUMNS = 3


\***************************************************
\            Drug Self Infusion Schedule
\  S1 - Set Default Values
\       Session Length                 (30 minutes)
\       Correct Lever                  (2-Right)
\       Maximum Number of Infusions    (10)
\       Fixed Ratio Value              (10)
\       Infusion Time                  (2 seconds)
\       Time Out Following Infusion    (60 seconds)
\       SoftCR Data Array              (1-Yes)
\***************************************************
S.S.1,
S1,
  0.01": SET A(^Session) = 30, A(^CorrectLev) = 2, A(^MaxRewards) = 10;
         SET A(^FRVal)   = 10, A(^RewardTime) = 2, A(^TimeOut)    = 60;
         SET A(^SoftCR)  = 1;
         SET C(I) = -987.987 ---> S2  \ Seal Array

S2,     \ First Statement: Wait for START signal, turn HouseLight ON
        \ and extend Levers
        \
        \ Second Statement: Update screen display with default values
        \ for Control Variables.  This will show any changes made via
        \ the "Configure | Change Variables" Window prior to START.
  #START: CLEAR 1,200;
          SET A(^RewardTicks)  = A(^RewardTime) * 1";
          SET A(^TimeOutTicks) = A(^TimeOut)    * 1";
          ON ^HouseLight, ^LeftLeverOut, ^RightLeverOut ---> S3
  1": SHOW 1,Session Length,A(^Session), 2,Correct Lever,A(^CorrectLev), 3,Max Infusions,A(^MaxRewards);
      SHOW 4,FR Value,A(^FRVal),         5,Infusion Time,A(^RewardTime), 6,Time Out,A(^TimeOut);
      SHOW 7,SoftCR Code,A(^SoftCR) ---> SX

S3,     \ Time Session Length
        \ Issue End of Session Signal unless Pump On
  0.01": SET S = S + 0.01;
         SHOW 1,Session,S/60;
         IF S/60 >= A(^Session) [@EndUnlessInfusionOn, @Continue]
            @EndUnless: IF S.S.2 = 4 [@Wait, @EndSession]
                           @Wait: ---> S4
                           @End: Z^Z_End ---> S5
            @Continue: ---> SX
  #Z^Z_End: ---> S5

S4,     \ Wait for End of Last Infusion and Time out Following Infusion
        \ Issue End of Session Signal
  #Z^Z_FR: Z^Z_End ---> S5

S5,     \ Calculate Responses/Minute in FR
  0.01": IF A(^CorrectLev) = 1 [@Left, @Right]
            @Left:  SET B(8) = B(3) / (B(6) / 60);
                    SHOW 15,Resp/Min,B(8) ---> S6
            @Right: SET B(8) = B(0) / (B(6) / 60);
                    SHOW 15,Resp/Min,B(8) ---> S6

S6,     \ Set a Pen Reset Code (.30) in the SoftCR array, if enabled
  0.01": IF A(^SoftCR) > 0 [@SoftCR, @NoSoftCR]
            @SoftCR: IF I <= ^CArraySize [@True, @False]
                        @True: SET C(I) = T + 0.30; ADD I;
                               IF I <= ^CArraySize [@True, @False]
                                  @True: SET C(I) = -987.987---> S7
                                  @False: ---> S7
                        @False: ---> S7
            @NoSoftCR: ---> S7

S7,     \ Wait for Screen Update and end with
        \ STOPABORTFLUSH for Automatic Data Saving
  2": ---> STOPABORTFLUSH


\***************************************************
\                   MAIN PROGRAM
\***************************************************
S.S.2,
S1,     \ Turn associated stimulus ON
        \ Issue Z^Z_FR Fixed Ratio Start Signal
  #START: IF A(^CorrectLev) = 1 [@Left, @Right]
             @Left:  ON ^LeftLight;  Z^Z_FR ---> S2
             @Right: ON ^RightLight; Z^Z_FR ---> S3

S2,     \ Left Lever Correct
        \ Wait for Animal to meet Fixed Ratio
        \ Turn the Pump on and issue a Z^Z_Reward Signal
  A(^FRVal)#R^LeftLever: ON ^Pump;
                         Z^Z_Reward ---> S4
  #Z^Z_End: OFF ^LeftLight ---> S6  \ End Session

S3,     \ Right Lever Correct
        \ Wait for Animal to meet Fixed Ratio
        \ Turn the Pump on and Issue a Z^Z_Reward Signal
  A(^FRVal)#R^RightLever: ON ^Pump;
                          Z^Z_Reward ---> S4
  #Z^Z_End: OFF ^RightLight ---> S6  \ End Session

S4,     \ Time Infusion Length
        \ Turn Pump and Stimulus OFF and issue Z^Z_TimeOut Signal
        \
        \ The PHM-100 Pump uses a 3.33 RPM motor and will deliver
        \ 36.734 ul with a 10 cc Multifit syringe and 65.5 ul with
        \ a 20 cc Multifit syringe in 2 sec.  See the motor/syringe
        \ table supplied with the Pump for specific flow rates for
        \ your syringe and adjust this time value with any text
        \ editor.
        \
        \ Run Trans after making any changes.  Solutions may also be
        \ adjusted to get the mg/kg dose per infusion desired.
  A(^RewardTicks)#T: OFF ^LeftLight, ^RightLight, ^Pump;
                     Z^Z_TimeOut ---> S5

S5,     \ Time Out Following Infusion
        \ Turn Associates Stimulus on and issue Z^Z_FR
        \ Fixed Ratio Start Signal
  A(^TimeOutTicks)#T: IF A(^CorrectLev) = 1 [@Left, @Right]
                         @Left:  ON ^LeftLight;  Z^Z_FR ---> S2
                         @Right: ON ^RightLight; Z^Z_FR ---> S3
  #Z^Z_End: ---> S6  \ End Session

S6,     \ Holding State at End of Session
  5': ---> SX


\***************************************************
\            COUNT RIGHT LEVER RESPONSES
\***************************************************
S.S.3,
S1,
  #START: ---> S2

S2,     \ Count Responses in Fixed Ratio
  #R^RightLever: ADD B(0) ---> SX
  #Z^Z_End:    ---> S5
  #Z^Z_Reward: ---> S3

S3,     \ Count Responses During Infusion
  #R^RightLever: ADD B(1) ---> SX
  #Z^Z_End:     ---> S5
  #Z^Z_TimeOut: ---> S4

S4,     \ Count Responses During Time Out
  #R^RightLever: ADD B(2) ---> SX
  #Z^Z_End: ---> S5
  #Z^Z_FR:  ---> S2

S5,     \ Holding State at End of Session
  5': ---> SX


\***************************************************
\            COUNT LEFT LEVER RESPONSES
\***************************************************
S.S.4,
S1,
  #START: ---> S2

S2,     \ Count Responses in Fixed Ratio
  #R^LeftLever: ADD B(3) ---> SX
  #Z^Z_End:    ---> S5
  #Z^Z_Reward: ---> S3

S3,     \ Count Responses During Infusion
  #R^LeftLever: ADD B(4) ---> SX
  #Z^Z_End:     ---> S5
  #Z^Z_TimeOut: ---> S4

S4,     \ Count Responses During Time Out
  #R^LeftLever: ADD B(5) ---> SX
  #Z^Z_End: ---> S5
  #Z^Z_FR:  ---> S2

S5,     \ Holding State at End of Session
  5': ---> SX


\***************************************************
\           INCREMENT TIME IN FIXED RATIO
\***************************************************
S.S.5,
S1,     \ Wait for Z^Z_FR signalling start of FR
  #Z^Z_FR: ---> S2

S2,     \ Increment B(6) every 0.01 seconds until
        \ End of FR (Infusion) is signaled by Z^Z_Reward
        \ or End of Session signaled by Z^Z_End
  0.01": SET B(6) = B(6) + 0.01 ---> SX
  #Z^Z_End:    ---> S3
  #Z^Z_Reward: ---> S1

S3,     \ Holding State at End of Session
  5': ---> SX


\***************************************************
\                  COUNT INFUSIONS
\***************************************************
S.S.6,
S1,
  #START: ---> S2

S2,     \ Count Infusions and End Session if the
        \ Maximum Number of Infusions is reached.
  #Z^Z_Reward: ADD B(7); IF B(7) >= A(^MaxRewards) [@MaxInject, @Cont]
                            @Max:  ---> S3
                            @Cont: ---> SX

S3,     \ Wait for the last Time out Following Infusion
        \ to End and Signal the End of Session.
  #Z^Z_FR: Z^Z_End ---> S1


\***************************************************
\                  UPDATE DISPLAY
\***************************************************
S.S.7,
S1,
  #START: SHOW 2,Rgt Lever Resp in FR,B(0), 3,Rgt Lever Resp in Infusion,B(1), 4,Rgt Lever Resp in TO,B(2);
          SHOW 7,Lft Lever Resp in FR,B(3), 8,Lft Lever Resp in Infusion,B(4), 9,Lft Lever Resp in TO,B(5);
          SHOW 12,FR Time,B(6),             13,# of Infusions,B(7) ---> S2

S2,
  1": SHOW 2,Rgt Lever Resp in FR,B(0), 3,Rgt Lever Resp in Infusion,B(1), 4,Rgt Lever Resp in TO,B(2);
      SHOW 7,Lft Lever Resp in FR,B(3), 8,Lft Lever Resp in Infusion,B(4), 9,Lft Lever Resp in TO,B(5);
      SHOW 12,FR Time,B(6),             13,# of Infusions,B(7) ---> SX


\***************************************************
\     INCREMENT TIME T FOR IRT AND EVENT ARRAY
\***************************************************
S.S.8,
S1,
  #START: IF A(^SoftCR) > 0 [] ---> S2

S2,
  0.01": ADD T ---> SX
  #Z^Z_End: ---> S1


\***********************************************************
\ ADD A STEP 0 ELEMENT TO ARRAY C FOR EACH CORRECT RESPONSE
\***********************************************************
S.S.9,
S1,
  #START: IF A(^SoftCR) > 0 [@SoftCR, @NoSoftCR]
             @SoftCR: IF A(^CorrectLev) = 1 [@LeftLeverCorrect, @RightLeverCorrect]
                         @LeftCorrect:  ---> S2
                         @RightCorrect: ---> S3
             @NoSoftCR: ---> SX

S2,     \ Left Lever Correct
  #R^LeftLever: IF I <= ^CArraySize [@True, @False]
                   @True: SET C(I) = T + 0.10, T = 0; ADD I;
                          IF I <= ^CArraySize [@True, @False]
                             @True: SET C(I) = -987.987 ---> SX
                             @False: ---> S1
                   @False: ---> S1
  #Z^Z_End: ---> S1

S3,     \ Right Lever Correct
  #R^RightLever: IF I <= ^CArraySize [@True, @False]
                    @True: SET C(I) = T + 0.10, T = 0; ADD I;
                           IF I <= ^CArraySize [@True, @False]
                              @True: SET C(I) = -987.987 ---> SX
                              @False: ---> S1
                    @False: ---> S1
  #Z^Z_End: ---> S1


\***************************************************
\  ADD A PIP 0 ELEMENT TO ARRAY C FOR EACH REWARD
\***************************************************
S.S.10,
S1,
  #START: IF A(^SoftCR) > 0 [] ---> S2

S2,     \ Record Rewards
  #Z^Z_Reward: IF I <= ^CArraySize [@True, @False]
                  @True: SET C(I) = T + 0.20, T = 0; ADD I;
                         IF I <= ^CArraySize [@True, @False]
                            @True: SET C(I) = -987.987 ---> SX
                            @False: ---> S1
                  @False: ---> S1


\***************************************************************
\ ADD AN EVENT 0 ELEMENT TO ARRAY C FOR EACH INCORRECT RESPONSE
\***************************************************************
S.S.11,
S1,
  #START: IF A(^SoftCR) > 0 [@SoftCR, @NoSoftCR]
             @SoftCR: SET C(I) = 0.50, I = I + 1, C(I) = -987.987;
                      IF A(^CorrectLev) = 2 [@LeftLeverIncorrect, @RightLeverIncorrect]
                         @LeftIncorrect:  ---> S2
                         @RightIncorrect: ---> S3
             @NoSoftCR: ---> SX

S2,     \ Left Lever Incorrect
  #R^LeftLever: IF I <= ^CArraySize [@True, @False]
                   @True: SET C(I) = T + 0.60, T = 0; ADD I;
                          IF I <= ^CArraySize [@True, @False]
                             @True: SET C(I) = 0.50; ADD I;
                                    IF I <= ^CArraySize [@True, @False]
                                       @True: SET C(I) = -987.987 ---> SX
                                       @False: ---> S1
                             @False: ---> S1
                   @False: ---> S1
  #Z^Z_End: ---> S1

S3,     \ Right Lever Incorrect
  #R^RightLever: IF I <= ^CArraySize [@True, @False]
                    @True: SET C(I) = T + 0.60, T = 0; ADD I;
                           IF I <= ^CArraySize [@True, @False]
                              @True: SET C(I) = 0.50; ADD I;
                                     IF I <= ^CArraySize [@True, @False]
                                        @True: SET C(I) = -987.987 ---> SX
                                        @False: ---> S1
                              @False: ---> S1
                    @False: ---> S1
  #Z^Z_End: ---> S1

